name: Terraform

on: [push, pull_request]

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v1

    - name: Format
      id: fmt
      run: terraform fmt -check -diff -recursive
      continue-on-error: true

    - name: Init
      id: init
      run: terraform init

    - name: Validate
      id: validate
      run: terraform validate

    - name: Plan
      id: plan
      run: terraform plan
      continue-on-error: true

    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

          <details><summary>Validation Output</summary>

          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`

          </details>

          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
